package yujong.ecommerce_yujong.참고사항;

import lombok.Data;

@Data

//@AllArgsConstructor //기본적으로 DTO에는 모든 필드를 갖는 생성자를 만드는 @AllArgsConstructor를 붙여줌.
//@NoArgsConstructor
//@Data //기본적으로 DTO에는 '@Data'를 붙여줌.
        //dto에는 기본적으로 반드시 @Getter와 @NoArgsConstructor를 붙여줘야 한다!
public class dto작성시참고사항 {

    /*
    < dto에는 가능하면 Wrapper 클래스(Integer, Long 등)를 사용해라 >

    - 기본타입: 오직 '값'만 저장할 수 있고, '값 자체가 없는 상태인 null'은 저장하거나 나타낼 수 없음.
               NullPointerException이 발생하지 않는다는 이점이 있지만, '값이 없음 null'을 나타내는 데는 한계가 있음.
               계산, 연산, 숫자, 반복적인 작업 등의 상황에 사용하기에 적합함.
    - 래퍼클래스: 기본 타입을 '객체로 래핑'하여, 값 외에도 null을 나타낼 수 있음.
                '객체'를 다루므로, 추가적인 메소드, 기능을 사용할 수 있음.
                값이 없을 수 있는 상황을 나타내는 데 적합함. 예를 들어, dto, 메소드 반환 유형 등에서는 래퍼클래스 사용하는 것이 더 안전함.
                계좌, 잔고, 나이 등 '값 자체가 없을 수 있는 null 상황이 발생할 수 있는 경우'에 사용 적합함.
                (계좌 자체가 아예 없는 사람이거나, 그 사람의 나이를 모르는 상황에서 이 대상들을 null로 나타낼 수 있다는 장점임)
    - 비유
      기본 타입 (int, long): 기본 타입은 손에 들고 다니기에 적합한 동전입니다.
                            작고 가볍고, 빠르게 계산할 수 있습니다. 그러나 이 동전에는 무조건 어떤 값이 들어있어야 하며,
                            "값 없음" 상태를 나타낼 방법이 없습니다.
      래퍼 클래스 (Integer, Long): 래퍼 클래스는 동전이 아닌 지갑과 같습니다.
                                 여기에는 동전 뿐만 아니라 명함, 신용 카드, 또는 비어있는 지갑일 수도 있습니다.
                                 이 지갑은 무언가가 들어 있지 않을 수도 있는데, 이것이 "값 없음"을 나타냅니다.

    - 실생활 예시:
      금융 계좌 잔고: 금융 계좌의 잔고를 나타낼 때, 잔고가 0원인 경우와 잔고가 없는 경우(계좌가 아직 개설되지 않음)를 구분해야 합니다.
                    따라서 Long을 사용하여 "값 없음"을 표시할 수 있습니다.
      나이 정보: 사람의 나이를 나타낼 때, 나이를 모를 경우 "값 없음"을 나타내기 위해 Integer를 사용할 수 있습니다.
     */
}





